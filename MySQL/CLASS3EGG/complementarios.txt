USE mi_bd;
/* 
-- Ejercicios con cláusula IN

-- 1. Busca los empleados que trabajan en los departamentos 2 o 3.
SELECT * FROM empleados WHERE departamento_id IN (2, 3);

-- 2. Trae a los clientes que no tengan los IDs 2, 4 o 6.
SELECT * FROM clientes WHERE id NOT IN (2, 4, 6);

-- 3. Busca los productos cuyos precios son 350.00, 480.00 o 800.00.
SELECT * FROM productos WHERE precio IN (350.00, 480.00, 800.00);
*/

/* 
-- Ejercicios con cláusula LIKE

-- 1. Busca los empleados cuyos correos electrónicos terminan en "mail.com".
SELECT * FROM empleados WHERE correo LIKE '%mail.com';

-- 2. Encuentra los productos cuyos nombres tengan exactamente 6 caracteres.
SELECT * FROM productos WHERE nombre LIKE '______';  -- Se usan 6 guiones bajos.

-- 3. Busca los clientes cuyos nombres tengan una "a" en la tercera posición.
SELECT * FROM clientes WHERE nombre LIKE '__a%';
*/

/* 
-- Ejercicios con cláusula ORDER BY

-- 1. Ordena los clientes por nombre de manera ascendente y luego por dirección de manera descendente.
SELECT * FROM clientes ORDER BY nombre ASC, direccion DESC;

-- 2. Ordena los empleados por fecha_contratación de manera descendente.
SELECT * FROM empleados ORDER BY fecha_contratacion DESC;

-- 3. Ordena los productos por precio de manera ascendente.
SELECT * FROM productos ORDER BY precio ASC;
*/

/* 
-- Ejercicios con función MAX()

-- 1. Encuentra el precio máximo de un producto.
SELECT MAX(precio) AS precio_maximo FROM productos;

-- 2. Encuentra el monto total máximo de una venta.
SELECT MAX(monto_total) AS monto_maximo FROM ventas;

-- 3. Encuentra el ID de cliente con el valor máximo.
SELECT MAX(id) AS cliente_maximo FROM clientes;
*/

/* 
-- Ejercicios con función MIN()

-- 1. Encuentra el precio mínimo de un producto.
SELECT MIN(precio) AS precio_minimo FROM productos;

-- 2. Encuentra el monto total mínimo de una venta.
SELECT MIN(monto_total) AS monto_minimo FROM ventas;

-- 3. Encuentra el ID de cliente con el valor mínimo.
SELECT MIN(id) AS cliente_minimo FROM clientes;
*/

/* 
-- Ejercicios con función COUNT()

-- 1. Cuenta cuántos clientes tienen la palabra "López" en su nombre.
SELECT COUNT(*) AS cantidad_lopez FROM clientes WHERE nombre LIKE '%López%';

-- 2. Cuenta cuántas ventas fueron realizadas por el empleado con el id 9.
SELECT COUNT(*) AS ventas_empleado_9 FROM ventas WHERE empleado_id = 9;

-- 3. Cuenta cuántos productos tienen un nombre que contiene la palabra "Digital".
SELECT COUNT(*) AS productos_digital FROM productos WHERE nombre LIKE '%Digital%';
*/

/* 
-- Ejercicios con función SUM()

-- 1. Calcula la suma de cantidades de productos vendidos por empleado.
SELECT empleado_id, SUM(cantidad) AS total_cantidad FROM ventas GROUP BY empleado_id;

-- 2. Calcula la suma de salarios de empleados en el Departamento 1.
SELECT SUM(salario) AS total_salarios FROM empleados WHERE departamento_id = 1;

-- 3. Calcula la suma de precios de productos vendidos al cliente con id 2.
SELECT SUM(monto_total) AS total_precio FROM ventas WHERE cliente_id = 2;
*/

/* 
-- Ejercicios con función AVG()

-- 1. Calcula el precio promedio de productos con un precio superior a $200.
SELECT AVG(precio) AS promedio_precio FROM productos WHERE precio > 200;

-- 2. Calcula el salario promedio de los empleados en el Departamento 1.
SELECT AVG(salario) AS salario_promedio FROM empleados WHERE departamento_id = 1;

-- 3. Calcula la cantidad promedio de productos vendidos por empleado.
SELECT empleado_id, AVG(cantidad) AS promedio_cantidad FROM ventas GROUP BY empleado_id;
*/

/* 
-- Ejercicios con función GROUP BY()

-- 1. Agrupa las ventas por cliente y muestra el monto total gastado por cada cliente.
SELECT cliente_id, SUM(monto_total) AS total_gastado FROM ventas GROUP BY cliente_id;

-- 2. Encuentra el salario máximo por departamento.
SELECT departamento_id, MAX(salario) AS salario_maximo FROM empleados GROUP BY departamento_id;

-- 3. Encuentra el salario mínimo por departamento.
SELECT departamento_id, MIN(salario) AS salario_minimo FROM empleados GROUP BY departamento_id;

-- 4. Obtén la suma total de salarios por departamento.
SELECT departamento_id, SUM(salario) AS total_salarios FROM empleados GROUP BY departamento_id;

-- 5. Encuentra la cantidad total de productos vendidos por empleado.
SELECT empleado_id, SUM(cantidad) AS total_productos FROM ventas GROUP BY empleado_id;
*/

/* 
-- Ejercicios con función HAVING()

-- 1. Encuentra los departamentos con al menos 2 empleados con una edad menor de 30 años.
SELECT departamento_id, COUNT(*) AS empleados_jovenes FROM empleados
WHERE edad < 30 GROUP BY departamento_id HAVING COUNT(*) >= 2;

-- 2. Muestra los clientes que han gastado más de $2,000 en total en compras.
SELECT cliente_id, SUM(monto_total) AS total_gastado FROM ventas
GROUP BY cliente_id HAVING SUM(monto_total) > 2000;
*/

/* 
-- Ejercicios con función AS()

-- 1. Muestra la edad de los empleados junto con la edad aumentada en 5 años y que esta nueva columna se llame “Edad en 5 años”.
SELECT nombre, edad, edad + 5 AS 'Edad en 5 años' FROM empleados;

-- 2. Muestra el monto total de ventas junto con el monto total aumentado en un 21% y que esta nueva columna se llame “Precio + IVA”.
SELECT monto_total, monto_total * 1.21 AS 'Precio + IVA' FROM ventas;

-- 3. Crea una consulta que muestre el nombre del producto y su precio unitario precedido con el signo “$” y que esta nueva columna se llame “precio con formato”.
SELECT nombre, CONCAT('$', precio) AS 'precio con formato' FROM productos;
*/

/* 
-- Ejercicios con función LIMIT()

-- 1. Muestra los 5 clientes con los IDs más bajos.
SELECT * FROM clientes ORDER BY id ASC LIMIT 5;

-- 2. Muestra los 3 productos más vendidos.
SELECT producto_id, SUM(cantidad) AS total_vendido FROM ventas GROUP BY producto_id ORDER BY total_vendido DESC LIMIT 3;

-- 3. Muestra los 5 empleados más jóvenes.
SELECT * FROM empleados ORDER BY edad ASC LIMIT 5;
*/

/* 
-- Ejercicios con función CASE()

-- 1. Crea una consulta que muestre el nombre de los productos y los categorice como "Laptop", "Teléfono" o "Otros".
SELECT nombre, 
    CASE 
        WHEN nombre LIKE '%Laptop%' THEN 'Laptop'
        WHEN nombre LIKE '%Teléfono%' THEN 'Teléfono'
        ELSE 'Otros'
    END AS categoria
FROM productos;

-- 2. Clasifica productos según cantidad total de ventas.
SELECT producto_id, 
    SUM(cantidad) AS total_ventas,
    CASE 
        WHEN SUM(cantidad) >= 9 THEN 'Alto Volumen'
        WHEN SUM(cantidad) BETWEEN 4 AND 8 THEN 'Medio Volumen'
        ELSE 'Bajo Volumen'
    END AS categoria
FROM ventas
GROUP BY producto_id
ORDER BY total_ventas DESC;

-- 3. Clasifica las ventas según el monto total.
SELECT id, 
    CASE 
        WHEN monto_total < 500 THEN 'Venta pequeña'
        WHEN monto_total BETWEEN 500 AND 1499 THEN 'Venta mediana'
        ELSE 'Venta grande'
    END AS tipo_venta
FROM ventas;

-- 4. Clasifica a los clientes según la longitud de su dirección.
SELECT nombre, 
    CASE 
        WHEN LENGTH(direccion) >= 30 THEN 'Dirección larga'
        WHEN LENGTH(direccion) BETWEEN 20 AND 29 THEN 'Dirección mediana'
        ELSE 'Dirección corta'
    END AS categoria_direccion
FROM clientes;

-- 5. Clasifica empleados según departamento.
SELECT nombre, 
    CASE 
        WHEN departamento_id = 1 THEN 'Ventas'
        WHEN departamento_id = 2 THEN 'Recursos Humanos'
        WHEN departamento_id = 3 THEN 'Contabilidad'
    END AS departamento
FROM empleados;

-- 6. Categoriza los productos por tipo y precio.
SELECT nombre, precio,
    CASE 
        WHEN nombre IN ('Laptop', 'Reloj de Pulsera Inteligente', 'Reproductor de Blu-ray', 'Auriculares Bluetooth', 'Smart TV 55 Pulgadas', 'Cámara Digital', 'Impresora', 'Tablet', 'Teléfono móvil') 
            AND precio >= 1000 THEN 'Tecnología cara'
        WHEN nombre IN ('Laptop', 'Reloj de Pulsera Inteligente', 'Reproductor de Blu-ray', 'Auriculares Bluetooth', 'Smart TV 55 Pulgadas', 'Cámara Digital', 'Impresora', 'Tablet', 'Teléfono móvil') 
            AND precio BETWEEN 500 AND 999 THEN 'Tecnología gama media'
        WHEN nombre IN ('Laptop', 'Reloj de Pulsera Inteligente', 'Reproductor de Blu-ray', 'Auriculares Bluetooth', 'Smart TV 55 Pulgadas', 'Cámara Digital', 'Impresora', 'Tablet', 'Teléfono móvil') 
            AND precio < 500 THEN 'Tecnología barata'
        WHEN precio >= 1000 THEN 'Caro'
        WHEN precio BETWEEN 500 AND 999 THEN 'Medio'
        ELSE 'Barato'
    END AS categoria
FROM productos;
*/
